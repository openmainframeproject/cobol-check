TESTSUITE:
Verify Cobol Check handles numeric relations properly
     PASS:   1. Equal sign with literal compare                                                 
**** FAIL:   2. Equal sign with literal compare (should fail)                                   
    EXPECTED +00000000025.7500000
         WAS +00000000025.7400000
     PASS:   3. Not equal sign with literal compare                                             
**** FAIL:   4. Not equal sign with literal compare (should fail)                               
    EXPECTED +00000000025.7400000
         WAS +00000000025.7400000
     PASS:   5. Not-equal sign with literal compare                                             
**** FAIL:   6. Not-equal sign with literal compare (should fail)                               
    EXPECTED +00000000013.6000000
         WAS +00000000013.6000000
     PASS:   7. Not not-equal sign with literal compare                                         
**** FAIL:   8. Not not-equal sign with literal compare (should fail)                           
    EXPECTED +00000000013.6000000
         WAS +00000000013.7000000
     PASS:   9. Equal sign with ield compare                                                    
**** FAIL:  10. Equal sign with field compare (should fail)                                     
    EXPECTED +00000000025.7500000
         WAS +00000000025.7400000
     PASS:  11. Not equal sign with field compare                                               
**** FAIL:  12. Not equal sign with field compare (should fail)                                 
    EXPECTED +00000000025.7400000
         WAS +00000000025.7400000
     PASS:  13. Not-equal sign with field compare                                               
**** FAIL:  14. Not-equal sign with field compare (should fail)                                 
    EXPECTED +00000000025.7400000
         WAS +00000000025.7400000
     PASS:  15. Not not-equal sign with field compare                                           
**** FAIL:  16. Not not-equal sign with field compare (should fail)                             
    EXPECTED +00000000025.7400000
         WAS +00000000025.7500000
     PASS:  17. Less-than sign with literal compare                                             
**** FAIL:  18. Less-than sign with literal compare (should fail)                               
    EXPECTED +00000000018.0660000
         WAS +00000000018.0670000
     PASS:  19. Not less-than sign with literal compare                                         
**** FAIL:  20. Not less-than sign with literal compare (should fail)                           
    EXPECTED +00000000018.0670000
         WAS +00000000018.0660000
     PASS:  21. Less-than sign with field compare                                               
**** FAIL:  22. Less-than sign with field compare (should fail)                                 
    EXPECTED +00000000416.0720000
         WAS +00000000416.0720000
     PASS:  23. Not less-than sign with field compare                                           
**** FAIL:  24. Not less-than sign with field compare (should fail)                             
    EXPECTED +00000000416.0720000
         WAS +00000000416.0710000
     PASS:  25. Greater-than sign with literal compare                                          
**** FAIL:  26. Greater-than sign with literal compare (should fail)                            
    EXPECTED +00000000010.0000000
         WAS +00000000009.8050000
     PASS:  27. Not greater-than sign with literal compare                                      
**** FAIL:  28. Not greater-than sign with literal compare (should fail)                        
    EXPECTED +00000000107.7010000
         WAS +00000000107.7020000
     PASS:  29. Greater-than sign with field compare                                            
**** FAIL:  30. Greater-than sign with field compare (should fail)                              
    EXPECTED +00000001766.0314400
         WAS +00000001766.0314300
     PASS:  31. Not greater-than sign with field to field compare                               
**** FAIL:  32. Not greater-than sign with field compare (should fail)                          
    EXPECTED +00000001766.0314400
         WAS +00000001766.0314500
     PASS:  33. Greater-than-or-equal-to sign with literal compare when greater                 
     PASS:  34. Greater-than-or-equal-to sign with literal compare when equal                   
**** FAIL:  35. Greater-than-or-equal-to sign with literal compare (should fail)                
    EXPECTED +00000000010.0000000
         WAS +00000000009.8050000
     PASS:  36. Not greater-than-or-equal-to sign with literal compare when less                
**** FAIL:  37. Not greater-than-or-equal-to sign with literal compare when equal (should fail) 
    EXPECTED +00000000018.0670000
         WAS +00000000018.0670000
**** FAIL:  38. Greater-than-or-equal-to sign with literal compare when greater (should fail)   
    EXPECTED +00000000013.4400000
         WAS +00000000013.4500000
     PASS:  39. Greater-than-or-equal-to-sign with field compare when equal                     
     PASS:  40. Greater-than-or-equal-to-sign with field compare when greater                   
**** FAIL:  41. Greater-than-or-equal-to-sign with field compare when less (should fail)        
    EXPECTED +00000000475.0620000
         WAS +00000000475.0610000
     PASS:  42. Not greater-than-or-equal-to-sign with field compare when less                  
**** FAIL:  43. Not greater-than-or-equal-to-sign with field compare when equal (should fail)   
    EXPECTED +00000000475.0620000
         WAS +00000000475.0620000
**** FAIL:  44. Not greater-than-or-equal-to-sign with field compare when greater (should fail) 
    EXPECTED +00000000475.0620000
         WAS +00000000475.0630000
     PASS:  45. Less-than-or-equal-to-sign with field compare when equal                        
     PASS:  46. Less-than-or-equal-to-sign with field compare when less                         
**** FAIL:  47. Less-than-or-equal-to-sign with field compare when greater (should fail)        
    EXPECTED +00000000475.0620000
         WAS +00000000475.0630000
     PASS:  48. Not less-than-or-equal-to-sign with field compare when greater                  
**** FAIL:  49. Not greater-than-or-equal-to-sign with field compare when equal (should fail)   
    EXPECTED +00000000475.0620000
         WAS +00000000475.0620000
**** FAIL:  50. Not greater-than-or-equal-to-sign with field compare when less (should fail)    
    EXPECTED +00000000475.0630000
         WAS +00000000475.0620000
     PASS:  51. Display Numeric field equals literal                                            
     PASS:  52. Display Numeric field equals literal                                            
     PASS:  53. Variable must be ZERO                                                           
     PASS:  54. Variable must be ZEROS                                                          
     PASS:  55. Variable must be ZEROES                                                         
     PASS:  56. Variable must be NUMERIC 123                                                    
     PASS:  57. Variable must be NUMERIC -123                                                   
     PASS:  58. Variable must be 123                                                            
     PASS:  59. Variable must be -123                                                           
 
 59 TEST CASES WERE EXECUTED
 34 PASSED
 25 FAILED
=================================================
TESTSUITE:
Tests of alphanumeric expectations
     PASS:   1. Equality with an alphanumeric literal using TO BE                               
     PASS:   2. Equality with an alphanumeric literal using TO EQUAL                            
     PASS:   3. Equality with an alphanumeric literal using '='                                 
     PASS:   4. Equality with an alphanumeric literal and reference modification                
     PASS:   5. Non-equality with an alphanumeric literal using TO BE                           
     PASS:   6. Non-equality with an alphanumeric literal using TO EQUAL                        
     PASS:   7. Non-equality with an alphanumeric literal using '!='                            
     PASS:   8. Non-equality with an alphanumeric literal and reference modification            
     PASS:   9. Greater-than sign with an alphanumeric literal                                  
     PASS:  10. Less-than sign with an alphanumeric literal                                     
     PASS:  11. Not greater-than sign with an alphanumeric literal                              
     PASS:  12. Not less-than sign with an alphanumeric literal                                 
     PASS:  13. Display numeric                                                                 
     PASS:  14. Variable must be SPACE                                                          
     PASS:  15. Variable must be SPACES                                                         
 
 15 TEST CASES WERE EXECUTED
 15 PASSED
  0 FAILED
=================================================
TESTSUITE:
Greeting includes the user name when it is provided
**** FAIL:   1. When message type is greeting it returns Hello, James!                          
    EXPECTED <Hello, James!>, WAS <Hello, James !>
**** FAIL:   2. When message type is farewell it returns Goodbye, James!                        
    EXPECTED <Goodbye, James!>, WAS <See you later, James    !>
     PASS:   3. User name for greeting and farewell are consistent                              
TESTSUITE:
Greeting returns the appropriate message based on message type
**** FAIL:   4. When message type is greeting it returns 'Hello, World!'                        
    EXPECTED <Hello, World!>, WAS <Hello, Henry !>
     PASS:   5. try numerical compare                                                           
**** FAIL:   6. try 88 level compare                                                            
    EXPECTED <FALSE>, WAS <TRUE>
**** FAIL:   7. When message type is farewell it returns See you later, alligator!              
    EXPECTED <See you later, alligator!>, WAS <See you later, Henry    !>
**** FAIL:   8. Message type greeting is not true                                               
    EXPECTED <FALSE>, WAS <TRUE>
 
  8 TEST CASES WERE EXECUTED
  2 PASSED
  6 FAILED
=================================================

TESTSUITE:
Before and after tests 1
     PASS:   1. Before sets value                                                               
     PASS:   2. After sets value                                                                
     PASS:   3. Before happens before Testcase                                                  
     PASS:   4. After happens after Testcase (part 1)                                           
     PASS:   5. After happens after Testcase (part 2)                                           
TESTSUITE:
Before and after tests 2
     PASS:   6. VERIFY EXACT 0 ACCESSES TO SECTION 000-START                                                                                                                                                                                                    
     PASS:   7. VERIFY EXACT 0 ACCESSES TO SECTION 100-WELCOME                                                                                                                                                                                                  
     PASS:   8. Only global mocks apply in before/after (part 1)                                
     PASS:   9. Only global mocks apply in before/after (part 1)                                
     PASS:  10. Only global mocks apply in before/after (part 1)                                
     PASS:  11. Only global mocks apply in before/after (part 2)                                
     PASS:  12. Only global mocks apply in before/after (part 2)                                
     PASS:  13. Only global mocks apply in before/after (part 2)                                
     PASS:  14. Only global mocks apply in before/after (part 3)                                
     PASS:  15. Only global mocks apply in before/after (part 3)                                
     PASS:  16. Only global mocks apply in before/after (part 3)                                
TESTSUITE:
Before and after tests 3
     PASS:  17. Before proceeds after from last testcase (part 1)                               
     PASS:  18. Before proceeds after from last testcase (part 2)                               
TESTSUITE:
General tests
     PASS:  19. Welcome section performs as intended                                            
     PASS:  20. Welcome section performs as intended                                            
     PASS:  21. Goodbye section performs as intended                                            
     PASS:  22. Goodbye section performs as intended                                            
     PASS:  23. Change-1 changes hello to bye                                                   
     PASS:  24. Change-1 changes hello to bye                                                   
     PASS:  25. Change-1 changes bye to hello                                                   
     PASS:  26. Change-1 changes bye to hello                                                   
     PASS:  27. Change-2 changes hi to see you                                                  
     PASS:  28. Change-2 changes hi to see you                                                  
     PASS:  29. Change-2 changes see you to hi                                                  
     PASS:  30. Change-2 changes see you to hi                                                  
     PASS:  31. Switches values                                                                 
     PASS:  32. Switches values                                                                 
TESTSUITE:
Mock Call statements test
     PASS:  33. Simple call mock works                                                          
     PASS:  34. Simple call mock works                                                          
     PASS:  35. VERIFY EXACT 1 ACCESS   TO CALL 'PROG1'                                                                                                                                                                                                         
     PASS:  36. Simple global call mock works                                                   
     PASS:  37. Simple global call mock works                                                   
     PASS:  38. VERIFY EXACT 1 ACCESS   TO CALL 'PROG1'                                                                                                                                                                                                         
     PASS:  39. Call mock with argument works                                                   
     PASS:  40. Call mock with argument works                                                   
     PASS:  41. VERIFY EXACT 1 ACCESS   TO CALL VALUE-2                                                                                                                                                                                                         
     PASS:  42. Call mock with field and no arguments work                                      
     PASS:  43. Call mock with field and no arguments work                                      
     PASS:  44. VERIFY EXACT 1 ACCESS   TO CALL VALUE-2                                                                                                                                                                                                         
     PASS:  45. Call mock with content reference for arguments work                             
     PASS:  46. Call mock with content reference for arguments work                             
     PASS:  47. Call mock with content reference for arguments work                             
     PASS:  48. VERIFY EXACT 2 ACCESSES TO CALL 'PROG3'                                                                                                                                                                                                         
     PASS:  49. Paragraph mock is called and call mock is ignored                               
     PASS:  50. Paragraph mock is called and call mock is ignored                               
     PASS:  51. Paragraph mock is called and call mock is ignored                               
     PASS:  52. VERIFY EXACT 1 ACCESS   TO PARAGRAPH 800-MAKE-CALL                                                                                                                                                                                              
     PASS:  53. VERIFY EXACT 0 ACCESSES TO CALL 'PROG3'                                                                                                                                                                                                         
**** FAIL:  54. Global call mock is not overwritten by local call mock (Should fail)            
    EXPECTED <Global PROG1>, WAS <Local PROG1>
TESTSUITE:
Mock Sections And Paragraphs
     PASS:  55. Global mock behaves as intended                                                 
     PASS:  56. Global mock behaves as intended                                                 
     PASS:  57. VERIFY EXACT 1 ACCESS   TO SECTION 000-START                                                                                                                                                                                                    
     PASS:  58. VERIFY EXACT 0 ACCESSES TO PARAGRAPH 300-CHANGE-1                                                                                                                                                                                               
     PASS:  59. Local mock overwrites global mock                                               
     PASS:  60. Local mock overwrites global mock                                               
     PASS:  61. VERIFY AT LEAST 2 ACCESSES TO SECTION 000-START                                                                                                                                                                                                 
**** FAIL:  62. VERIFY ACCESSES TO SECTION 000-START                                                                                                                                                                                                            
   EXPECTED EXACT 5 ACCESSES, WAS 2                                                                                                                                                                                                                             
     PASS:  63. Multiple local mocks behaves as intended (First Verify should fail)             
     PASS:  64. VERIFY NO MORE THAN 10 ACCESSES TO SECTION 100-WELCOME                                                                                                                                                                                          
     PASS:  65. VERIFY EXACT 0 ACCESSES TO PARAGRAPH 500-SWITCH                                                                                                                                                                                                 
     PASS:  66. Multiple local mocks behaves as intended (First Verify should fail)             
     PASS:  67. Empty local mock makes section do nothing                                       
     PASS:  68. Empty local mock makes section do nothing                                       
     PASS:  69. VERIFY EXACT 1 ACCESS   TO PARAGRAPH 500-SWITCH                                                                                                                                                                                                 
     PASS:  70. Local and global mocks can be used together                                     
     PASS:  71. Local and global mocks can be used together                                     
     PASS:  72. If no local or global mock run source code                                      
     PASS:  73. If no local or global mock run source code                                      
     PASS:  74. Global paragraph mock works                                                     
     PASS:  75. Global paragraph mock works                                                     
     PASS:  76. Mock with EXIT SECTION in source works                                          
     PASS:  77. Mock one-liner with end mock on next line                                       
     PASS:  78. Mock one-liner with content                                                     
     PASS:  79. Mock content with end-mock on the same line                                     
     PASS:  80. Mock content on multiple lines, with end-mock on the same line as some content  
     PASS:  81. Mock content on multiple lines, with end-mock on the same line as some content  
 
 81 TEST CASES WERE EXECUTED
 79 PASSED
  2 FAILED
=================================================
TESTSUITE:
Verify Cobol Check handles decimal is comma properly
     PASS:   1. simple expect for number                                                        
     PASS:   2. simple expect for number                                                        
     PASS:   3. VERIFY EXACT 1 ACCESS   TO PARAGRAPH 100-ASSIGN                                                                                                                                                                                                 
 
  3 TEST CASES WERE EXECUTED
  3 PASSED
  0 FAILED
=================================================
