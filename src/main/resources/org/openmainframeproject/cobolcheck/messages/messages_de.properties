# Deutsch

ERR001 = ERR001: %1$s ist beim Eintritt in die %2$s-Methode null.
ERR002 = ERR002: %1$s enthält keinen Eintrag für Schlüssel %2$s.
ERR003 = ERR003: IOException beim Lesen der Konfigurationsdatei <%1$s> in Config.load(configResourceName).
ERR004 = ERR004: Argument für die Befehlszeilenoption <%1$s> erwartet, aber <% 2$s> erhalten.
ERR005 = ERR005: Die an GetOpt übergebene Befehlszeilenoptionsspezifikationszeichenfolge war null.
ERR006 = ERR006: Erwartet eine Befehlszeilenoption, hat aber <%1$s>.
ERR007 = ERR007: Generator.runSuite() Leerer Eingabestream (cobolSourceIn).
ERR008 = ERR008: %1$s wird voraussichtlich einen Copybook-Namen nach dem COPY-Verb in <%2$s> finden.
ERR009 = ERR009: Beim Parsen einer Testsuite wurde ein undefiniertes Schlüsselwort <%1$s> gefunden.
ERR010 = ERR010: Generator.parseTestSuite() Leerer Eingabestream (testSuiteReader).
ERR011 = ERR011: Test Suite-Eingabedatei nicht gefunden: %1$s. Definieren Sie es als test.suite.path in config oder als --test-suite-path in der Befehlszeile.
ERR012 = ERR012: Beim Erstellen oder Schreiben der verketteten Eingabedatei der Testsuite ist ein Problem aufgetreten: %1$s.
ERR013 = ERR013: TestSuiteConcatenator.concatenateTestSuites() hat bei der Verarbeitung von %1$s eine IOException abgefangen.
ERR014 = ERR014: TestSuiteConcatenator.concatenateTestSuites() hat beim Lesen von Testsuite-Dateien im Verzeichnis %1$s eine IOException abgefangen.
ERR015 = ERR015: TestSuiteConcatenator.concatenateTestSuites() hat beim Konvertieren der verketteten Testsuite-Datei von WRITER nach READER eine IOException abgefangen.
ERR016 = ERR016: Driver hat beim Erstellen des WRITER eine IOException abgefangen, um das Testprogramm für %1$s zu erstellen.
ERR017 = ERR017: Driver hat die IOException abgefangen, als er den WRITER für das Testprogramm %1$s geschlossen hat, nachdem er von der Zusammenführung zurückgekehrt ist.
ERR018 = ERR018: Driver hat die IOException beim Versuch, READER für das zu testende Programm <%1$s> zu erstellen, abgefangen.
ERR019 = ERR019: Driver hat die IOException abgefangen, als er den Verzeichnisbaum der Testsuite für das zu testende Programm %1$s durchgesehen hat.
ERR020 = ERR020: LinuxProcessLauncher wurde ohne Namen eines Testprogramms aufgerufen.
ERR021 = ERR021: In der Konfiguration wurde kein Skriptname für Schlüssel %1$s gefunden.
ERR022 = ERR022: In der Konfiguration wurde kein Skriptverzeichnisname für Schlüssel %1$s gefunden.
ERR023 = ERR023: Der Prozess konnte nicht mit Argumenten gestartet werden: %1$s.
ERR024 = ERR024: Generator.insertExpandedCopyStatements() copyTokens-Liste ist leer oder der erste Eintrag ist nicht COPY.
ERR025 = ERR025: Unbekanntes Befehlszeilenargument %1$s wurde übergeben.
ERR026 = ERR026: Constants-constructor sollte niemals aufgerufen werden. 
ERR027 = ERR027: NumericFields.dataTypeOf() wurde mit leerem Feldnamen aufgerufen.
ERR028 = ERR028: NumericFields.setDataTypeOf() wurde mit leerem Feldnamen aufgerufen.
ERR029 = ERR029: NumericFields.setDataTypeOf() wurde mit null dataType aufgerufen.

WRN001 = WRN001: Unter Verzeichnis %2$s wurde kein Testsuite-Verzeichnis für Programm %1$s gefunden.
WRN002 = WRN002: Unter Verzeichnis %1$s wurden keine Testsuite-Dateien gefunden.
WRN003 = WRN003: DirectoryNameMatcher hat die IOException in der Datei %1$s abgefangen.

INF000 = INF000: Starting Cobol Check version %1$s.
INF001 = INF001: Versuch, die Konfiguration von %1$s zu laden.
INF002 = INF002: Die Konfiguration wurde erfolgreich von %1$s geladen.
INF003 = INF003: CobolCcheck startet
INF004 = INF004: CobolCheck wird beendet
INF005 = INF005: Die Protokollstufe beträgt %1$s.
INF006 = INF006: Konfigurationseinstellungen: %1$s.
INF007 = INF007: Verketten die Eingabedatei der Testsuite %1$s mit %2$s.
INF008 = INF008: Prozess wird gestartet: %1$s.
INF009 = INF009: Prozess %1$s wurde mit dem Exit-Code %2$s beendet.

